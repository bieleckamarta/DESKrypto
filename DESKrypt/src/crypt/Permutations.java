package crypt;

public final class Permutations {

    private Integer[] firstPermutationArray;
    private Integer[] endPermutationArray;
    private Integer[] keyPermutationArray;
    private Integer[] numberOfShiftsArray;
    private Integer[] concatenatedKeyPermutationArray;
    private Integer[] expadedRightBlockOfPlainText;
    private Integer[] s1;
    private Integer[] s2;
    private Integer[] s3;
    private Integer[] s4;
    private Integer[] s5;
    private Integer[] s6;
    private Integer[] s7;
    private Integer[] s8;
    private Integer[] P;

    public Permutations() {
        initFirstPermut();
        initEndPermut();
        initKeyPermutation();
        initNumberOFShifts();
        initConcatenatedKeyPermutaionArray();
        initS1();
        initS2();
        initS3();
        initS4();
        initS5();
        initS6();
        initS7();
        initS8();
        initExpandRightBlockOfPlainText();
        initP();
    }

    public Integer[] getFirstPermutationArray() {
        return firstPermutationArray;
    }
    public Integer[] getEndPermutationArray() {
        return endPermutationArray;
    }
    public Integer[] getKeyPermutationArray() { return  keyPermutationArray; }
    public Integer[] getNumberOfShiftsArray() { return numberOfShiftsArray; }
    public Integer[] getConcatenatedKeyPermutationArray() { return concatenatedKeyPermutationArray; }
    public Integer[] getExpadedRightBlockOfPlainText() { return expadedRightBlockOfPlainText; }
    public Integer[] getS1() { return s1; }
    public Integer[] getS2() { return s2; }
    public Integer[] getS3() { return s3; }
    public Integer[] getS4() { return s4; }
    public Integer[] getS5() { return s5; }
    public Integer[] getS6() { return s6; }
    public Integer[] getS7() { return s7; }
    public Integer[] getS8() { return s8; }
    public Integer[] getP() { return P; }

    private void initP() {
        P = new Integer[32];

        P[0] = 16;
        P[1] = 7;
        P[2] = 20;
        P[3] = 21;
        P[4] = 29;
        P[5] = 12;
        P[6] = 28;
        P[7] = 17;
        P[8] = 1;
        P[9] = 15;
        P[10] = 23;
        P[11] = 26;
        P[12] = 5;
        P[13] = 18;
        P[14] = 31;
        P[15] = 10;
        P[16] = 2;
        P[17] = 8;
        P[18] = 24;
        P[19] = 14;
        P[20] = 32;
        P[21] = 27;
        P[22] = 3;
        P[23] = 9;
        P[24] = 19;
        P[25] = 13;
        P[26] = 30;
        P[27] = 6;
        P[28] = 22;
        P[29] = 11;
        P[30] = 4;
        P[31] = 25;

        for(int i = 0; i < 32; i++ )P[i]--;
    }

    private void initExpandRightBlockOfPlainText() {
        expadedRightBlockOfPlainText = new Integer[48];

        expadedRightBlockOfPlainText[0] = 32;
        expadedRightBlockOfPlainText[1] = 1;
        expadedRightBlockOfPlainText[2] = 2;
        expadedRightBlockOfPlainText[3] = 3;
        expadedRightBlockOfPlainText[4] = 4;
        expadedRightBlockOfPlainText[5] = 5;
        expadedRightBlockOfPlainText[6] = 4;
        expadedRightBlockOfPlainText[7] = 5;
        expadedRightBlockOfPlainText[8] = 6;
        expadedRightBlockOfPlainText[9] = 7;
        expadedRightBlockOfPlainText[10] = 8;
        expadedRightBlockOfPlainText[11] = 9;
        expadedRightBlockOfPlainText[12] = 8;
        expadedRightBlockOfPlainText[13] = 9;
        expadedRightBlockOfPlainText[14] = 10;
        expadedRightBlockOfPlainText[15] = 11;
        expadedRightBlockOfPlainText[16] = 12;
        expadedRightBlockOfPlainText[17] = 13;
        expadedRightBlockOfPlainText[18] = 12;
        expadedRightBlockOfPlainText[19] = 13;
        expadedRightBlockOfPlainText[20] = 14;
        expadedRightBlockOfPlainText[21] = 15;
        expadedRightBlockOfPlainText[22] = 16;
        expadedRightBlockOfPlainText[23] = 17;
        expadedRightBlockOfPlainText[24] = 16;
        expadedRightBlockOfPlainText[25] = 17;
        expadedRightBlockOfPlainText[26] = 18;
        expadedRightBlockOfPlainText[27] = 19;
        expadedRightBlockOfPlainText[28] = 20;
        expadedRightBlockOfPlainText[29] = 21;
        expadedRightBlockOfPlainText[30] = 20;
        expadedRightBlockOfPlainText[31] = 21;
        expadedRightBlockOfPlainText[32] = 22;
        expadedRightBlockOfPlainText[33] = 23;
        expadedRightBlockOfPlainText[34] = 24;
        expadedRightBlockOfPlainText[35] = 25;
        expadedRightBlockOfPlainText[36] = 24;
        expadedRightBlockOfPlainText[37] = 25;
        expadedRightBlockOfPlainText[38] = 26;
        expadedRightBlockOfPlainText[39] = 27;
        expadedRightBlockOfPlainText[40] = 28;
        expadedRightBlockOfPlainText[41] = 29;
        expadedRightBlockOfPlainText[42] = 28;
        expadedRightBlockOfPlainText[43] = 29;
        expadedRightBlockOfPlainText[44] = 30;
        expadedRightBlockOfPlainText[45] = 31;
        expadedRightBlockOfPlainText[46] = 32;
        expadedRightBlockOfPlainText[47] = 1;

        for(int i = 0; i < 48; i++ )expadedRightBlockOfPlainText[i]--;
    }

    private void initS8() {
        s8 = new Integer[64];

        s8[0] = 13;
        s8[1] = 2;
        s8[2] = 8;
        s8[3] = 4;
        s8[4] = 6;
        s8[5] = 15;
        s8[6] = 11;
        s8[7] = 1;
        s8[8] = 10;
        s8[9] = 9;
        s8[10] = 3;
        s8[11] = 14;
        s8[12] = 5;
        s8[13] = 0;
        s8[14] = 12;
        s8[15] = 7;
        s8[16] = 1;
        s8[17] = 15;
        s8[18] = 13;
        s8[19] = 8;
        s8[20] = 10;
        s8[21] = 3;
        s8[22] = 7;
        s8[23] = 4;
        s8[24] = 12;
        s8[25] = 5;
        s8[26] = 6;
        s8[27] = 11;
        s8[28] = 0;
        s8[29] = 14;
        s8[30] = 9;
        s8[31] = 2;
        s8[32] = 7;
        s8[33] = 11;
        s8[34] = 4;
        s8[35] = 1;
        s8[36] = 9;
        s8[37] = 12;
        s8[38] = 14;
        s8[39] = 2;
        s8[40] = 0;
        s8[41] = 6;
        s8[42] = 10;
        s8[43] = 13;
        s8[44] = 15;
        s8[45] = 3;
        s8[46] = 5;
        s8[47] = 8;
        s8[48] = 2;
        s8[49] = 1;
        s8[50] = 14;
        s8[51] = 7;
        s8[52] = 4;
        s8[53] = 10;
        s8[54] = 8;
        s8[55] = 13;
        s8[56] = 15;
        s8[57] = 12;
        s8[58] = 9;
        s8[59] = 0;
        s8[60] = 3;
        s8[61] = 5;
        s8[62] = 6;
        s8[63] = 11;
    }

    private void initS7() {
        s7 = new Integer[64];

        s7[0] = 4;
        s7[1] = 11;
        s7[2] = 2;
        s7[3] = 14;
        s7[4] = 15;
        s7[5] = 0;
        s7[6] = 8;
        s7[7] = 13;
        s7[8] = 3;
        s7[9] = 12;
        s7[10] = 9;
        s7[11] = 7;
        s7[12] = 5;
        s7[13] = 10;
        s7[14] = 6;
        s7[15] = 1;
        s7[16] = 13;
        s7[17] = 0;
        s7[18] = 11;
        s7[19] = 7;
        s7[20] = 4;
        s7[21] = 9;
        s7[22] = 1;
        s7[23] = 10;
        s7[24] = 14;
        s7[25] = 3;
        s7[26] = 5;
        s7[27] = 12;
        s7[28] = 2;
        s7[29] = 15;
        s7[30] = 8;
        s7[31] = 6;
        s7[32] = 1;
        s7[33] = 4;
        s7[34] = 11;
        s7[35] = 13;
        s7[36] = 12;
        s7[37] = 3;
        s7[38] = 7;
        s7[39] = 14;
        s7[40] = 10;
        s7[41] = 15;
        s7[42] = 6;
        s7[43] = 8;
        s7[44] = 0;
        s7[45] = 5;
        s7[46] = 9;
        s7[47] = 2;
        s7[48] = 6;
        s7[49] = 11;
        s7[50] = 13;
        s7[51] = 8;
        s7[52] = 1;
        s7[53] = 4;
        s7[54] = 10;
        s7[55] = 7;
        s7[56] = 9;
        s7[57] = 5;
        s7[58] = 0;
        s7[59] = 15;
        s7[60] = 14;
        s7[61] = 2;
        s7[62] = 3;
        s7[63] = 12;
    }

    private void initS6() {
        s6 = new Integer[64];

        s6[0] = 12;
        s6[1] = 1;
        s6[2] = 10;
        s6[3] = 15;
        s6[4] = 9;
        s6[5] = 2;
        s6[6] = 6;
        s6[7] = 8;
        s6[8] = 0;
        s6[9] = 13;
        s6[10] = 3;
        s6[11] = 4;
        s6[12] = 14;
        s6[13] = 7;
        s6[14] = 5;
        s6[15] = 11;
        s6[16] = 10;
        s6[17] = 15;
        s6[18] = 4;
        s6[19] = 2;
        s6[20] = 7;
        s6[21] = 12;
        s6[22] = 9;
        s6[23] = 5;
        s6[24] = 6;
        s6[25] = 1;
        s6[26] = 13;
        s6[27] = 14;
        s6[28] = 0;
        s6[29] = 11;
        s6[30] = 3;
        s6[31] = 8;
        s6[32] = 9;
        s6[33] = 14;
        s6[34] = 15;
        s6[35] = 5;
        s6[36] = 2;
        s6[37] = 8;
        s6[38] = 12;
        s6[39] = 3;
        s6[40] = 7;
        s6[41] = 0;
        s6[42] = 4;
        s6[43] = 10;
        s6[44] = 1;
        s6[45] = 13;
        s6[46] = 11;
        s6[47] = 6;
        s6[48] = 4;
        s6[49] = 3;
        s6[50] = 2;
        s6[51] = 12;
        s6[52] = 9;
        s6[53] = 5;
        s6[54] = 15;
        s6[55] = 10;
        s6[56] = 11;
        s6[57] = 14;
        s6[58] = 1;
        s6[59] = 7;
        s6[60] = 6;
        s6[61] = 0;
        s6[62] = 8;
        s6[63] = 13;
    }

    private void initS5() {
        s5 = new Integer[64];

        s5[0] = 2;
        s5[1] = 12;
        s5[2] = 4;
        s5[3] = 1;
        s5[4] = 7;
        s5[5] = 10;
        s5[6] = 11;
        s5[7] = 6;
        s5[8] = 8;
        s5[9] = 5;
        s5[10] = 3;
        s5[11] = 15;
        s5[12] = 13;
        s5[13] = 0;
        s5[14] = 14;
        s5[15] = 9;
        s5[16] = 14;
        s5[17] = 11;
        s5[18] = 2;
        s5[19] = 12;
        s5[20] = 4;
        s5[21] = 7;
        s5[22] = 13;
        s5[23] = 1;
        s5[24] = 5;
        s5[25] = 0;
        s5[26] = 15;
        s5[27] = 10;
        s5[28] = 3;
        s5[29] = 9;
        s5[30] = 8;
        s5[31] = 6;
        s5[32] = 4;
        s5[33] = 2;
        s5[34] = 1;
        s5[35] = 11;
        s5[36] = 10;
        s5[37] = 13;
        s5[38] = 7;
        s5[39] = 8;
        s5[40] = 15;
        s5[41] = 9;
        s5[42] = 12;
        s5[43] = 5;
        s5[44] = 6;
        s5[45] = 3;
        s5[46] = 0;
        s5[47] = 14;
        s5[48] = 11;
        s5[49] = 8;
        s5[50] = 12;
        s5[51] = 7;
        s5[52] = 1;
        s5[53] = 14;
        s5[54] = 2;
        s5[55] = 13;
        s5[56] = 6;
        s5[57] = 15;
        s5[58] = 0;
        s5[59] = 9;
        s5[60] = 10;
        s5[61] = 4;
        s5[62] = 5;
        s5[63] = 3;
    }

    private void initS4() {
        s4 = new Integer[64];

        s4[0] = 7;
        s4[1] = 13;
        s4[2] = 14;
        s4[3] = 3;
        s4[4] = 0;
        s4[5] = 6;
        s4[6] = 9;
        s4[7] = 10;
        s4[8] = 1;
        s4[9] = 2;
        s4[10] = 8;
        s4[11] = 5;
        s4[12] = 11;
        s4[13] = 12;
        s4[14] = 4;
        s4[15] = 15;
        s4[16] = 13;
        s4[17] = 8;
        s4[18] = 11;
        s4[19] = 5;
        s4[20] = 6;
        s4[21] = 15;
        s4[22] = 0;
        s4[23] = 3;
        s4[24] = 4;
        s4[25] = 7;
        s4[26] = 2;
        s4[27] = 12;
        s4[28] = 1;
        s4[29] = 10;
        s4[30] = 14;
        s4[31] = 9;
        s4[32] = 10;
        s4[33] = 6;
        s4[34] = 9;
        s4[35] = 0;
        s4[36] = 12;
        s4[37] = 11;
        s4[38] = 7;
        s4[39] = 13;
        s4[40] = 15;
        s4[41] = 1;
        s4[42] = 3;
        s4[43] = 14;
        s4[44] = 5;
        s4[45] = 2;
        s4[46] = 8;
        s4[47] = 4;
        s4[48] = 3;
        s4[49] = 15;
        s4[50] = 0;
        s4[51] = 6;
        s4[52] = 10;
        s4[53] = 1;
        s4[54] = 13;
        s4[55] = 8;
        s4[56] = 9;
        s4[57] = 4;
        s4[58] = 5;
        s4[59] = 11;
        s4[60] = 12;
        s4[61] = 7;
        s4[62] = 2;
        s4[63] = 14;
    }

    private void initS3() {
        s3 = new Integer[64];

        s3[0] = 10;
        s3[1] = 0;
        s3[2] = 9;
        s3[3] = 14;
        s3[4] = 6;
        s3[5] = 3;
        s3[6] = 15;
        s3[7] = 5;
        s3[8] = 1;
        s3[9] = 13;
        s3[10] = 12;
        s3[11] = 7;
        s3[12] = 11;
        s3[13] = 4;
        s3[14] = 2;
        s3[15] = 8;
        s3[16] = 13;
        s3[17] = 7;
        s3[18] = 0;
        s3[19] = 9;
        s3[20] = 3;
        s3[21] = 4;
        s3[22] = 6;
        s3[23] = 10;
        s3[24] = 2;
        s3[25] = 8;
        s3[26] = 5;
        s3[27] = 14;
        s3[28] = 12;
        s3[29] = 11;
        s3[30] = 15;
        s3[31] = 1;
        s3[32] = 13;
        s3[33] = 6;
        s3[34] = 4;
        s3[35] = 9;
        s3[36] = 8;
        s3[37] = 15;
        s3[38] = 3;
        s3[39] = 0;
        s3[40] = 11;
        s3[41] = 1;
        s3[42] = 2;
        s3[43] = 12;
        s3[44] = 5;
        s3[45] = 10;
        s3[46] = 14;
        s3[47] = 7;
        s3[48] = 1;
        s3[49] = 10;
        s3[50] = 13;
        s3[51] = 0;
        s3[52] = 6;
        s3[53] = 9;
        s3[54] = 8;
        s3[55] = 7;
        s3[56] = 4;
        s3[57] = 15;
        s3[58] = 14;
        s3[59] = 3;
        s3[60] = 11;
        s3[61] = 5;
        s3[62] = 2;
        s3[63] = 12;

    }


    private void initS2() {
        s2 = new Integer[64];

        s2[0] = 15;
        s2[1] = 1;
        s2[2] = 8;
        s2[3] = 14;
        s2[4] = 6;
        s2[5] = 11;
        s2[6] = 3;
        s2[7] = 4;
        s2[8] = 9;
        s2[9] = 7;
        s2[10] = 2;
        s2[11] = 13;
        s2[12] = 12;
        s2[13] = 0;
        s2[14] = 5;
        s2[15] = 10;
        s2[16] = 3;
        s2[17] = 13;
        s2[18] = 4;
        s2[19] = 7;
        s2[20] = 15;
        s2[21] = 2;
        s2[22] = 8;
        s2[23] = 14;
        s2[24] = 12;
        s2[25] = 0;
        s2[26] = 1;
        s2[27] = 10;
        s2[28] = 6;
        s2[29] = 9;
        s2[30] = 11;
        s2[31] = 5;
        s2[32] = 0;
        s2[33] = 14;
        s2[34] = 7;
        s2[35] = 11;
        s2[36] = 10;
        s2[37] = 4;
        s2[38] = 13;
        s2[39] = 1;
        s2[40] = 5;
        s2[41] = 8;
        s2[42] = 12;
        s2[43] = 6;
        s2[44] = 9;
        s2[45] = 3;
        s2[46] = 2;
        s2[47] = 15;
        s2[48] = 13;
        s2[49] = 8;
        s2[50] = 10;
        s2[51] = 1;
        s2[52] = 3;
        s2[53] = 15;
        s2[54] = 4;
        s2[55] = 2;
        s2[56] = 11;
        s2[57] = 6;
        s2[58] = 7;
        s2[59] = 12;
        s2[60] = 0;
        s2[61] = 5;
        s2[62] = 14;
        s2[63] = 9;
}

private void initS1() {
        s1 = new Integer[64];

        s1[0] = 14;
        s1[1] = 4;
        s1[2] = 13;
        s1[3] = 1;
        s1[4] = 2;
        s1[5] = 15;
        s1[6] = 11;
        s1[7] = 8;
        s1[8] = 3;
        s1[9] = 10;
        s1[10] = 6;
        s1[11] = 12;
        s1[12] = 5;
        s1[13] = 9;
        s1[14] = 0;
        s1[15] = 7;
        s1[16] = 0;
        s1[17] = 15;
        s1[18] = 7;
        s1[19] = 4;
        s1[20] = 14;
        s1[21] = 2;
        s1[22] = 13;
        s1[23] = 1;
        s1[24] = 1;
        s1[25] = 6;
        s1[26] = 12;
        s1[27] = 11;
        s1[28] = 9;
        s1[29] = 5;
        s1[30] = 3;
        s1[31] = 8;
        s1[32] = 4;
        s1[33] = 1;
        s1[34] = 14;
        s1[35] = 8;
        s1[36] = 13;
        s1[37] = 6;
        s1[38] = 2;
        s1[39] = 11;
        s1[40] = 15;
        s1[41] = 12;
        s1[42] = 9;
        s1[43] = 7;
        s1[44] = 3;
        s1[45] = 10;
        s1[46] = 5;
        s1[47] = 0;
        s1[48] = 15;
        s1[49] = 12;
        s1[50] = 8;
        s1[51] = 2;
        s1[52] = 4;
        s1[53] = 9;
        s1[54] = 1;
        s1[55] = 7;
        s1[56] = 5;
        s1[57] = 11;
        s1[58] = 3;
        s1[59] = 14;
        s1[60] = 10;
        s1[61] = 0;
        s1[62] = 6;
        s1[63] = 13;
    }

    private void initConcatenatedKeyPermutaionArray() {
        concatenatedKeyPermutationArray = new Integer[48];

        concatenatedKeyPermutationArray[0] = 14;
        concatenatedKeyPermutationArray[1] = 17;
        concatenatedKeyPermutationArray[2] = 11;
        concatenatedKeyPermutationArray[3] = 24;
        concatenatedKeyPermutationArray[4] = 1;
        concatenatedKeyPermutationArray[5] = 5;
        concatenatedKeyPermutationArray[6] = 3;
        concatenatedKeyPermutationArray[7] = 28;
        concatenatedKeyPermutationArray[8] = 14;
        concatenatedKeyPermutationArray[9] = 6;
        concatenatedKeyPermutationArray[10] = 21;
        concatenatedKeyPermutationArray[11] = 10;
        concatenatedKeyPermutationArray[12] = 23;
        concatenatedKeyPermutationArray[13] = 19;
        concatenatedKeyPermutationArray[14] = 12;
        concatenatedKeyPermutationArray[15] = 4;
        concatenatedKeyPermutationArray[16] = 26;
        concatenatedKeyPermutationArray[17] = 8;
        concatenatedKeyPermutationArray[18] = 16;
        concatenatedKeyPermutationArray[19] = 7;
        concatenatedKeyPermutationArray[20] = 27;
        concatenatedKeyPermutationArray[21] = 20;
        concatenatedKeyPermutationArray[22] = 13;
        concatenatedKeyPermutationArray[23] = 2;
        concatenatedKeyPermutationArray[24] = 41;
        concatenatedKeyPermutationArray[25] = 52;
        concatenatedKeyPermutationArray[26] = 31;
        concatenatedKeyPermutationArray[27] = 37;
        concatenatedKeyPermutationArray[28] = 47;
        concatenatedKeyPermutationArray[29] = 55;
        concatenatedKeyPermutationArray[30] = 30;
        concatenatedKeyPermutationArray[31] = 40;
        concatenatedKeyPermutationArray[32] = 51;
        concatenatedKeyPermutationArray[33] = 45;
        concatenatedKeyPermutationArray[34] = 33;
        concatenatedKeyPermutationArray[35] = 48;
        concatenatedKeyPermutationArray[36] = 44;
        concatenatedKeyPermutationArray[37] = 49;
        concatenatedKeyPermutationArray[38] = 39;
        concatenatedKeyPermutationArray[39] = 56;
        concatenatedKeyPermutationArray[40] = 34;
        concatenatedKeyPermutationArray[41] = 53;
        concatenatedKeyPermutationArray[42] = 46;
        concatenatedKeyPermutationArray[43] = 42;
        concatenatedKeyPermutationArray[44] = 50;
        concatenatedKeyPermutationArray[45] = 36;
        concatenatedKeyPermutationArray[46] = 29;
        concatenatedKeyPermutationArray[47] = 32;

        for(int i = 0; i < 48; i++) concatenatedKeyPermutationArray[i]--;
    }


    private void initNumberOFShifts(){
        numberOfShiftsArray = new Integer[16];

        numberOfShiftsArray[0] = 1;
        numberOfShiftsArray[1] = 1;
        numberOfShiftsArray[2] = 2;
        numberOfShiftsArray[3] = 2;
        numberOfShiftsArray[4] = 2;
        numberOfShiftsArray[5] = 2;
        numberOfShiftsArray[6] = 2;
        numberOfShiftsArray[7] = 2;
        numberOfShiftsArray[8] = 1;
        numberOfShiftsArray[9] = 2;
        numberOfShiftsArray[10] = 2;
        numberOfShiftsArray[11] = 2;
        numberOfShiftsArray[12] = 2;
        numberOfShiftsArray[13] = 2;
        numberOfShiftsArray[14] = 2;
        numberOfShiftsArray[15] = 1;
    }

    private void initFirstPermut() {
        firstPermutationArray = new Integer[64];

        firstPermutationArray[0] = 58;
        firstPermutationArray[1] = 50;
        firstPermutationArray[2] = 42;
        firstPermutationArray[3] = 34;
        firstPermutationArray[4] = 26;
        firstPermutationArray[5] = 18;
        firstPermutationArray[6] = 10;
        firstPermutationArray[7] = 2;
        firstPermutationArray[8] = 60;
        firstPermutationArray[9] = 52;
        firstPermutationArray[10] = 44;
        firstPermutationArray[11] = 36;
        firstPermutationArray[12] = 28;
        firstPermutationArray[13] = 20;
        firstPermutationArray[14] = 12;
        firstPermutationArray[15] = 4;
        firstPermutationArray[16] = 62;
        firstPermutationArray[17] = 54;
        firstPermutationArray[18] = 46;
        firstPermutationArray[19] = 38;
        firstPermutationArray[20] = 30;
        firstPermutationArray[21] = 22;
        firstPermutationArray[22] = 14;
        firstPermutationArray[23] = 6;
        firstPermutationArray[24] = 64;
        firstPermutationArray[25] = 56;
        firstPermutationArray[26] = 48;
        firstPermutationArray[27] = 40;
        firstPermutationArray[28] = 32;
        firstPermutationArray[29] = 24;
        firstPermutationArray[30] = 16;
        firstPermutationArray[31] = 8;
        firstPermutationArray[32] = 57;
        firstPermutationArray[33] = 49;
        firstPermutationArray[34] = 41;
        firstPermutationArray[35] = 33;
        firstPermutationArray[36] = 25;
        firstPermutationArray[37] = 17;
        firstPermutationArray[38] = 9;
        firstPermutationArray[39] = 1;
        firstPermutationArray[40] = 59;
        firstPermutationArray[41] = 51;
        firstPermutationArray[42] = 43;
        firstPermutationArray[43] = 35;
        firstPermutationArray[44] = 27;
        firstPermutationArray[45] = 19;
        firstPermutationArray[46] = 11;
        firstPermutationArray[47] = 3;
        firstPermutationArray[48] = 61;
        firstPermutationArray[49] = 53;
        firstPermutationArray[50] = 45;
        firstPermutationArray[51] = 37;
        firstPermutationArray[52] = 29;
        firstPermutationArray[53] = 21;
        firstPermutationArray[54] = 13;
        firstPermutationArray[55] = 5;
        firstPermutationArray[56] = 63;
        firstPermutationArray[57] = 55;
        firstPermutationArray[58] = 47;
        firstPermutationArray[59] = 39;
        firstPermutationArray[60] = 31;
        firstPermutationArray[61] = 23;
        firstPermutationArray[62] = 15;
        firstPermutationArray[63] = 7;

        for(int i = 0; i < 64; i++ ) firstPermutationArray[i]--;
    }

    private void initEndPermut() {
        endPermutationArray = new Integer[64];

        endPermutationArray[0] = 40;
        endPermutationArray[1] = 8;
        endPermutationArray[2] = 48;
        endPermutationArray[3] = 16;
        endPermutationArray[4] = 56;
        endPermutationArray[5] = 24;
        endPermutationArray[6] = 64;
        endPermutationArray[7] = 32;
        endPermutationArray[8] = 39;
        endPermutationArray[9] = 7;
        endPermutationArray[10] = 47;
        endPermutationArray[11] = 15;
        endPermutationArray[12] = 55;
        endPermutationArray[13] = 23;
        endPermutationArray[14] = 63;
        endPermutationArray[15] = 31;
        endPermutationArray[16] = 38;
        endPermutationArray[17] = 6;
        endPermutationArray[18] = 46;
        endPermutationArray[19] = 14;
        endPermutationArray[20] = 54;
        endPermutationArray[21] = 22;
        endPermutationArray[22] = 62;
        endPermutationArray[23] = 30;
        endPermutationArray[24] = 37;
        endPermutationArray[25] = 5;
        endPermutationArray[26] = 45;
        endPermutationArray[27] = 13;
        endPermutationArray[28] = 53;
        endPermutationArray[29] = 21;
        endPermutationArray[30] = 61;
        endPermutationArray[31] = 29;
        endPermutationArray[32] = 36;
        endPermutationArray[33] = 4;
        endPermutationArray[34] = 44;
        endPermutationArray[35] = 12;
        endPermutationArray[36] = 52;
        endPermutationArray[37] = 20;
        endPermutationArray[38] = 60;
        endPermutationArray[39] = 28;
        endPermutationArray[40] = 35;
        endPermutationArray[41] = 3;
        endPermutationArray[42] = 43;
        endPermutationArray[43] = 11;
        endPermutationArray[44] = 51;
        endPermutationArray[45] = 19;
        endPermutationArray[46] = 59;
        endPermutationArray[47] = 27;
        endPermutationArray[48] = 34;
        endPermutationArray[49] = 2;
        endPermutationArray[50] = 42;
        endPermutationArray[51] = 10;
        endPermutationArray[52] = 50;
        endPermutationArray[53] = 18;
        endPermutationArray[54] = 58;
        endPermutationArray[55] = 26;
        endPermutationArray[56] = 33;
        endPermutationArray[57] = 1;
        endPermutationArray[58] = 41;
        endPermutationArray[59] = 9;
        endPermutationArray[60] = 49;
        endPermutationArray[61] = 17;
        endPermutationArray[62] = 57;
        endPermutationArray[63] = 25;

        for(int i = 0; i < 64; i++ ) endPermutationArray[i]--;
    }

    public void initKeyPermutation() {
        keyPermutationArray = new Integer[56];

        keyPermutationArray[0] = 57;
        keyPermutationArray[1] = 49;
        keyPermutationArray[2] = 41;
        keyPermutationArray[3] = 33;
        keyPermutationArray[4] = 25;
        keyPermutationArray[5] = 17;
        keyPermutationArray[6] = 9;
        keyPermutationArray[7] = 1;
        keyPermutationArray[8] = 58;
        keyPermutationArray[9] = 50;
        keyPermutationArray[10] = 42;
        keyPermutationArray[11] = 34;
        keyPermutationArray[12] = 26;
        keyPermutationArray[13] = 18;
        keyPermutationArray[14] = 10;
        keyPermutationArray[15] = 2;
        keyPermutationArray[16] = 59;
        keyPermutationArray[17] = 51;
        keyPermutationArray[18] = 43;
        keyPermutationArray[19] = 35;
        keyPermutationArray[20] = 27;
        keyPermutationArray[21] = 19;
        keyPermutationArray[22] = 11;
        keyPermutationArray[23] = 3;
        keyPermutationArray[24] = 60;
        keyPermutationArray[25] = 52;
        keyPermutationArray[26] = 44;
        keyPermutationArray[27] = 36;
        keyPermutationArray[28] = 63;
        keyPermutationArray[29] = 55;
        keyPermutationArray[30] = 47;
        keyPermutationArray[31] = 39;
        keyPermutationArray[32] = 31;
        keyPermutationArray[33] = 23;
        keyPermutationArray[34] = 15;
        keyPermutationArray[35] = 7;
        keyPermutationArray[36] = 62;
        keyPermutationArray[37] = 54;
        keyPermutationArray[38] = 46;
        keyPermutationArray[39] = 38;
        keyPermutationArray[40] = 30;
        keyPermutationArray[41] = 22;
        keyPermutationArray[42] = 14;
        keyPermutationArray[43] = 6;
        keyPermutationArray[44] = 61;
        keyPermutationArray[45] = 53;
        keyPermutationArray[46] = 45;
        keyPermutationArray[47] = 37;
        keyPermutationArray[48] = 29;
        keyPermutationArray[49] = 21;
        keyPermutationArray[50] = 13;
        keyPermutationArray[51] = 5;
        keyPermutationArray[52] = 28;
        keyPermutationArray[53] = 20;
        keyPermutationArray[54] = 12;
        keyPermutationArray[55] = 4;

        for(int i = 0; i < 55; i++ ) keyPermutationArray[i]--;
    }
}
